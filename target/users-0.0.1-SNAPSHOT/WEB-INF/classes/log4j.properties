
# Encodage UTF-8

#**********************************************************
#hiérarchie des niveaux : FATAL>ERROR>WARN>INFO>DEBUG>TRACE 
#**********************************************************
# le niveau OFF permet de bloquer complètement un Logger.
# le niveau OFF permet de libérer complètement un Logger.
#**********************************************************

#************************************************
# 'log4j.debug=true' affiche des messages de débogage 
# indiquant les opération effectuées en interne
# par log4j
#------------------------------------------------
# log4j.debug=true

#**********************************************************
#hiérarchie des niveaux : FATAL>ERROR>WARN>INFO>DEBUG>TRACE 
#**********************************************************

#------------------------------------------------
# 'log4j.threshold = NIVEAU' définit un niveau minimal 
# pour tous les Loggers.
# tous les messages en DESSOUS de ce niveau seront ignorés  
# par tous les Loggers quel que soit leur niveau 
# (mais les messages au dessus de ce niveau sont traités 
# normalement, en fonction du niveau de chaque Logger).
#------------------------------------------------
# log4j.threshold = ERROR


# ****************************************************************
# LOGGER  ********************************************************
# ****************************************************************
# Le LOGGER est l'objet chargé d'écrire (de logger) les messages.
# Le LOGGER se voit affecter un NIVEAU.
# Par exemple, log4j.logger.levy.daniel.application = INFO
# signifie que ce LOGGER a le niveau INFO.
# Ce LOGGER aura été défini dans la classe 
# log4j.logger.levy.daniel.Application par l'instruction :
# 'private static final Log LOG = LogFactory.getLog(Application.class);'


# Les MESSAGES émis dans le code ont eux aussi leur propre
# niveau.
# Par exemple, LOG.WARN("Problème") dans le code signifie
# que le message "Problème" a le niveau WARN.
# Un message n'est journalisé que si sa priorité est supérieure 
# ou égale à la priorité du Logger effectuant la journalisation
# Si LOG est le LOGGER référencé plus haut par
# log4j.logger.levy.daniel.application, le message "Problème"
# a un NIVEAU (WARN) supérieur au niveau du LOGGER (INFO).

#**********************************************************
#hiérarchie des niveaux : FATAL>ERROR>WARN>INFO>DEBUG>TRACE 
#**********************************************************


#**********************************************************
# ROOTLOGGER
#**********************************************************
#NIVEAU GENERAL DU LOG. REDEFINI (SURCHARGE) PAR CHAQUE LIGNE CI-DESSOUS
# Le premier mot correspond au niveau de trace voulu (ERROR par exemple)
# Les mots suivants correspondent aux sorties par défaut applicables 
#à tous les logger que l'on veut autoriser. 
#On peut redéfinir les sorties (appender) logger par logger 
#dans les lignes ci-dessous.
# stdout = Console
# rolling = le fichier roulant de trace
#
# log4j.rootLogger=DEBUG, stdout, rolling signifie que le rootLogger :
# - aura le niveau DEBUG
# - sortira sur la console ET dans un fichier.

#------------------------------------------------

#**********************************************************
#hiérarchie des niveaux : FATAL>ERROR>WARN>INFO>DEBUG>TRACE 
#**********************************************************

# en DEVELOPPEMENT (logge ERROR, FATAL et WARN à la console (stdout)).
log4j.rootLogger=stdout

# en PRODUCTION (logge ERROR et FATAL dans un fichier roulant).
#log4j.rootLogger=error, rolling
#------------------------------------------------



#**********************************************************
# CONFIGURATION DES NIVEAUX de log pour chaque PACKAGE
#**********************************************************
#log4j.logger.levy.daniel.application=error, stdout
#log4j.logger.levy.daniel.application = WARN
#log4j.logger.test=error
#log4j.logger.historique=info
#log4j.logger.levy.daniel.commun.presentation.securite=debug
#log4j.logger.org.apache.struts.tiles.TilesRequestProcessor=debug
#log4j.logger.org.apache.struts.action=debug
#log4j.logger.timer=info
#log4j.logger.memoire=debug
#log4j.logger.org.apache.struts=debug
#log4j.logger.i2=info
#log4j.logger.levy.daniel.commun.util.contexte=debug
#log4j.logger.servletunit.struts=debug
#log4j.logger.org.apache.commons.beanutils=debug

#**********************************************************
#hiérarchie des niveaux : FATAL>ERROR>WARN>INFO>DEBUG>TRACE 
#**********************************************************
# NIVEAU DU LOG par défaut pour les classes du PACKAGE UTIL
log4j.logger.levy.daniel.application.util = info

# NIVEAU DU LOG par défaut pour les classes du PACKAGE METIER
log4j.logger.levy.daniel.application.metier = info


#------------------------------------------------


#------------------------------------------------
# POUR HIBERNATE 3
#------------------------------------------------

#**********************************************************
#hiérarchie des niveaux : FATAL>ERROR>WARN>INFO>DEBUG>TRACE 
#**********************************************************

### TOUT HIBERNATE (cfg, SQL, etc...) ##########################################
#log4j.logger.org.hibernate=trace, stdout


### Juste la CONFIGURATION  (mettre INFO pour voir le Log) ####################
#09:07:23,284  INFO Environment:593 - Hibernate 3.6.3.Final
#09:07:23,284  INFO Environment:626 - hibernate.properties not found
#09:07:23,284  INFO Environment:804 - Bytecode provider name : javassist
#09:07:23,284  INFO Environment:685 - using JDK 1.4 java.sql.Timestamp handling
#09:07:23,315  INFO Configuration:2129 - configuring from resource: /hibernate.cfg.xml
#09:07:23,315  INFO Configuration:2148 - Configuration resource: /hibernate.cfg.xml
#09:07:23,362  INFO Configuration:2270 - Configured SessionFactory: null
#09:07:23,393  INFO AnnotationBinder:532 - Binding entity from annotated class: levy.daniel.application.valueobject.Eleve
#09:07:23,408  INFO EntityBinder:530 - Bind entity levy.daniel.application.valueobject.Eleve on table ELEVES
#09:07:23,455  INFO Configuration:1649 - Hibernate Validator not found: ignoring
#09:07:23,455  INFO HibernateSearchEventListenerRegister:75 - Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.
#09:07:23,533  INFO SettingsFactory:126 - Database ->
#       name : PostgreSQL
#    version : 9.3.2
#      major : 9
#      minor : 3
#09:07:23,533  INFO SettingsFactory:132 - Driver ->
#       name : PostgreSQL Native Driver
#    version : PostgreSQL 9.3 JDBC4.1 (build 1100)
#      major : 9
#      minor : 3
#09:07:23,533  INFO SettingsFactory:179 - Automatic flush during beforeCompletion(): disabled
#09:07:23,533  INFO SettingsFactory:183 - Automatic session close at end of transaction: disabled
#09:07:23,533  INFO SettingsFactory:190 - JDBC batch size: 15
#09:07:23,533  INFO SettingsFactory:193 - JDBC batch updates for versioned data: disabled
#09:07:23,549  INFO SettingsFactory:198 - Scrollable result sets: enabled
#09:07:23,549  INFO SettingsFactory:206 - JDBC3 getGeneratedKeys(): enabled
#09:07:23,549  INFO SettingsFactory:214 - Connection release mode: auto
#09:07:23,549  INFO SettingsFactory:241 - Default batch fetch size: 1
#09:07:23,549  INFO SettingsFactory:245 - Generate SQL with comments: enabled
#09:07:23,549  INFO SettingsFactory:249 - Order SQL updates by primary key: disabled
#09:07:23,549  INFO SettingsFactory:253 - Order SQL inserts for batching: disabled
#09:07:23,549  INFO SettingsFactory:431 - Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
#09:07:23,549  INFO SettingsFactory:261 - Query language substitutions: {}
#09:07:23,549  INFO SettingsFactory:266 - JPA-QL strict compliance: disabled
#09:07:23,549  INFO SettingsFactory:271 - Second-level cache: enabled
#09:07:23,549  INFO SettingsFactory:275 - Query cache: disabled
#09:07:23,549  INFO SettingsFactory:406 - Cache region factory : org.hibernate.cache.impl.bridge.RegionFactoryCacheProviderBridge
#09:07:23,549  INFO SettingsFactory:285 - Optimize cache for minimal puts: disabled
#09:07:23,549  INFO SettingsFactory:294 - Structured second-level cache entries: disabled
#09:07:23,549  INFO SettingsFactory:314 - Echoing all SQL to stdout
#09:07:23,549  INFO SettingsFactory:323 - Statistics: enabled
#09:07:23,549  INFO SettingsFactory:327 - Deleted entity synthetic identifier rollback: disabled
#09:07:23,549  INFO SettingsFactory:343 - Default entity-mode: pojo
#09:07:23,549  INFO SettingsFactory:347 - Named query checking : enabled
#09:07:23,549  INFO SettingsFactory:351 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
log4j.logger.org.hibernate.cfg=error, stdout
#log4j.logger.org.hibernate.cfg=info, stdout


### Annotations (mettre INFO pour voir le Log) ################################
#09:09:37,210  INFO Version:37 - Hibernate Commons Annotations 3.2.0.Final
log4j.logger.org.hibernate.annotations = error, stdout
#log4j.logger.org.hibernate.annotations = info, stdout


### Juste le SQL  (mettre DEBUG pour voir le Log) #############################
# 17:20:51,046 DEBUG SQL:111 - select nextval ('hibernate_sequence')
# 17:20:51,062 DEBUG SQL:111 - insert into FORMATIONS (FORMATION_THEME, FORMATION_ID) values (?, ?)
log4j.logger.org.hibernate.SQL=error, stdout
#log4j.logger.org.hibernate.SQL=debug, stdout


### Juste le BINDING (association classes jave <> Tables) #####################
### CHOISIR LE NIVEAU TRACE pour voir passer les paramètres des requêtes.
#10:30:56,001 DEBUG BasicTypeRegistry:147 - Adding type registration boolean -> org.hibernate.type.BooleanType@26832b87
#10:30:56,001 DEBUG BasicTypeRegistry:147 - Adding type registration boolean -> org.hibernate.type.BooleanType@26832b87
#10:30:56,001 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@26832b87
#10:30:56,001 DEBUG BasicTypeRegistry:147 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@468b7aca
#
#10:30:56,344 DEBUG BasicTypeRegistry:147 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@33f21f7e
#10:30:56,344  INFO BasicTypeRegistry:150 - Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@579acd13
#
#10:30:56,671 TRACE BasicBinder:82 - binding parameter [1] as [TIMESTAMP] - Sat Feb 25 00:00:00 CET 1961
#10:30:56,671 TRACE BasicBinder:82 - binding parameter [2] as [VARCHAR] - Lévy
#10:30:56,671 TRACE BasicBinder:82 - binding parameter [3] as [VARCHAR] - Daniel
#10:30:56,671 TRACE BasicBinder:82 - binding parameter [4] as [BIGINT] - 10
log4j.logger.org.hibernate.type=error, stdout
#log4j.logger.org.hibernate.type=trace, stdout

### Juste le schema export/update HBM2DDL (mettre INFO pour voir le Log) ######
#10:37:53,816  INFO SchemaExport:234 - Running hbm2ddl schema export
#10:37:53,816  INFO SchemaExport:262 - exporting generated schema to database
#10:37:53,957  INFO SchemaExport:281 - schema export complete
log4j.logger.org.hibernate.tool.hbm2ddl=error, stdout
#log4j.logger.org.hibernate.tool.hbm2ddl=info, stdout

### juste le HQL (mettre DEBUG pour voir le Log) ##############################
#10:41:56,459  INFO ASTQueryTranslatorFactory:47 - Using ASTQueryTranslatorFactory
log4j.logger.org.hibernate.hql=error, stdout
#log4j.logger.org.hibernate.hql=debug, stdout

### juste le cache(mettre pour voir le Log) ###################################
#10:44:09,356  INFO RegionFactoryCacheProviderBridge:61 - Cache provider: org.hibernate.cache.NoCacheProvider
log4j.logger.org.hibernate.cache=error, stdout
#log4j.logger.org.hibernate.cache=trace, stdout

### Juste la connexion JDBC (mettre TRACE pour voir le Log) ###################
#10:47:12,037 DEBUG ConnectionManager:444 - opening JDBC connection
#10:47:12,053 TRACE JDBCContext:258 - after transaction begin
#10:47:12,053 DEBUG AbstractBatcher:410 - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
#
#10:47:12,053 TRACE AbstractBatcher:513 - preparing statement
#10:47:12,068 DEBUG AbstractBatcher:418 - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
#10:47:12,068 TRACE AbstractBatcher:562 - closing statement
#10:47:12,084 TRACE ConnectionManager:492 - registering flush begin
#10:47:12,084 DEBUG AbstractBatcher:410 - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
#
#10:47:12,084 TRACE AbstractBatcher:513 - preparing statement
#10:47:12,084 DEBUG AbstractBatcher:66 - Executing batch size: 1
#10:47:12,084 DEBUG AbstractBatcher:418 - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
#10:47:12,084 TRACE AbstractBatcher:562 - closing statement
#10:47:12,084 TRACE ConnectionManager:501 - registering flush end
#10:47:12,084 TRACE JDBCContext:249 - before transaction completion
#10:47:12,084 TRACE JDBCContext:263 - after transaction completion
#10:47:12,084 DEBUG ConnectionManager:427 - aggressively releasing JDBC connection
#10:47:12,084 DEBUG ConnectionManager:464 - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
#10:47:12,084 TRACE ConnectionManager:398 - connection already null in cleanup : no action
log4j.logger.org.hibernate.jdbc=error, stdout
#log4j.logger.org.hibernate.jdbc=trace, stdout


### Pour les DTD Entity Resolver (mettre DEBUG pour voir le log) ##############
#11:07:44,811 DEBUG DTDEntityResolver:67 - trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
#11:07:44,811 DEBUG DTDEntityResolver:69 - recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
#11:07:44,811 DEBUG DTDEntityResolver:109 - located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
log4j.logger.org.hibernate.util=error, stdout
#log4j.logger.org.hibernate.util=debug, stdout


### pour le DIALECT (mettre INFO pour voir le log) ############################
#11:11:05,815  INFO Dialect:135 - Using dialect: org.hibernate.dialect.PostgreSQLDialect
log4j.logger.org.hibernate.dialect=error, stdout
#log4j.logger.org.hibernate.dialect=info, stdout


### pour les TRANSACTION (mettre DEBUG pour voir le log) ######################
#11:13:42,689  INFO TransactionFactoryFactory:59 - Using default transaction strategy (direct JDBC transactions)
#11:13:42,689  INFO TransactionManagerLookupFactory:80 - No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
#11:13:43,001 DEBUG JDBCTransaction:78 - begin
#11:13:43,001 DEBUG JDBCTransaction:83 - current autocommit status: false
#
#11:13:43,016 DEBUG JDBCTransaction:130 - commit
#
#11:13:43,032 DEBUG JDBCTransaction:143 - committed JDBC Connection
log4j.logger.org.hibernate.transaction=error, stdout
#log4j.logger.org.hibernate.transaction=debug, stdout


### SessionFactory (mettre TRACE pour voir le log) ############################
#11:16:45,926  INFO SessionFactoryImpl:202 - building session factory
#11:16:45,926 DEBUG SessionFactoryImpl:206 - Statistics initialized [enabled=true]}
#11:16:45,926 DEBUG SessionFactoryImpl:228 - Session factory constructed with filter configurations : {}
#11:16:45,926 DEBUG SessionFactoryImpl:232 - instantiating session factory with properties: {java.vendor=Oracle Corporation, show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:postgresql://localhost/essai_hibernate, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Windows 7, sun.boot.class.path=C:\Program Files\Java\jdk1.7.0_45\jre\lib\resources.jar;C:\Program Files\Java\jdk1.7.0_45\jre\lib\rt.jar;C:\Program Files\Java\jdk1.7.0_45\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.7.0_45\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.7.0_45\jre\lib\jce.jar;C:\Program Files\Java\jdk1.7.0_45\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.7.0_45\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.7.0_45\jre\classes, hibernate.current_session_context_class=thread, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, hibernate.generate_statistics=true, java.runtime.version=1.7.0_45-b18, hibernate.cache.provider_class=org.hibernate.cache.NoCacheProvider, user.name=dan, current_session_context_class=thread, user.language=fr, sun.boot.library.path=C:\Program Files\Java\jdk1.7.0_45\jre\bin, java.version=1.7.0_45, user.timezone=Europe/Paris, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.7.0_45\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, hibernate.format_sql=true, java.class.version=51.0, user.country=FR, java.home=C:\Program Files\Java\jdk1.7.0_45\jre, java.vm.info=mixed mode, os.version=6.1, path.separator=;, java.vm.version=24.45-b08, hibernate.connection.password=postgres, user.variant=, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=postgres, user.script=, user.home=C:\Users\dan, java.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=create-drop, java.library.path=C:\Program Files\Java\jdk1.7.0_45\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\OpenCL SDK\3.0\bin\x86;C:\Program Files (x86)\Intel\OpenCL SDK\3.0\bin\x64;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\MySQL\MySQL Utilities 1.3.5\;., java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=org.postgresql.Driver, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 53140 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -test levy.daniel.application.integration.impl.nongeneriques.EleveDaoTest:testCreateUnSeulEleve, java.class.path=D:\Donnees\eclipse\eclipseworkspace\essai_hibernate\bin;D:\Donnees\eclipse\eclipseworkspace\essai_hibernate\lib\antlr-2.7.6.jar;D:\Donnees\eclipse\eclipseworkspace\essai_hibernate\lib\asm-attrs.jar;D:\Donnees\eclipse\eclipseworkspace\essai_hibernate\lib\asm.jar;D:\Donnees\eclipse\eclipseworkspace\essai_hibernate\lib\c3p0-0.9.1.jar;D:\Donnees\eclipse\eclipseworkspace\essai_hibernate\lib\cglib-2.2.jar;D:\Donnees\eclipse\eclipseworkspace\essai_hibernate\lib\commons-beanutils-1.8.0.jar;D:\Donnees\eclipse\eclipseworkspace\essai_hibernate\lib\commons-collections-3.2.1.jar;D:\Donnees\eclipse\eclipseworkspace\essai_hibernate\lib\commons-digester-1.7.jar;D:\Donnees\eclipse\eclipseworkspace\essai_hibernate\lib\commons-lang-2.5.jar;D:\Donnees\eclipse\eclipseworkspace\essai_hibernate\lib\commons-logging-1.1.1.jar;D:\Donnees\eclipse\eclipseworkspace\essai_hibernate\lib\displaytag-1.2.jar;D:\Donnees\eclipse\eclipseworkspace\essai_hibernate\lib\displaytag-export-poi-1.2.jar;D:\Donnees\eclipse\eclipseworkspace\essai_hibernate\lib\displaytag-portlet-1.2.jar;D:\Donnees\eclipse\eclipseworkspace\essai_hibernate\lib\dom4j-1.6.1.jar;D:\Donnees\eclipse\eclipseworkspace\essai_hibernate\lib\ehcache-1.3.0.jar;D:\Donnees\eclipse\eclipseworkspace\essai_hibernate\lib\hibernate-cglib-repack-2.1_3.jar;D:\Donnees\eclipse\eclipseworkspace\essai_hibernate\lib\hibernate-jpa-2.0-api-1.0.0.Final.jar;D:\Donnees\eclipse\eclipseworkspace\essai_hibernate\lib\hibernate3.jar;D:\Donnees\eclipse\eclipseworkspace\essai_hibernate\lib\hsqldb.jar;D:\Donnees\eclipse\eclipseworkspace\essai_hibernate\lib\itextpdf-5.2.1.jar;D:\Donnees\eclipse\eclipseworkspace\essai_hibernate\lib\javassist-3.12.0.GA.jar;D:\Donnees\eclipse\eclipseworkspace\essai_hibernate\lib\jdom-1.1.2.jar;D:\Donnees\eclipse\eclipseworkspace\essai_hibernate\lib\jstl-1.1.2.jar;D:\Donnees\eclipse\eclipseworkspace\essai_hibernate\lib\jta-1.1.jar;D:\Donnees\eclipse\eclipseworkspace\essai_hibernate\lib\junit-4.7.jar;D:\Donnees\eclipse\eclipseworkspace\essai_hibernate\lib\log4j-1.2.16.jar;D:\Donnees\eclipse\eclipseworkspace\essai_hibernate\lib\log4j-over-slf4j-1.7.2.jar;D:\Donnees\eclipse\eclipseworkspace\essai_hibernate\lib\mysql-connector-java-5.1.28-bin.jar;D:\Donnees\eclipse\eclipseworkspace\essai_hibernate\lib\ojdbc14.jar;D:\Donnees\eclipse\eclipseworkspace\essai_hibernate\lib\oscache-2.1.jar;D:\Donnees\eclipse\eclipseworkspace\essai_hibernate\lib\postgresql-9.3-1100.jdbc41.jar;D:\Donnees\eclipse\eclipseworkspace\essai_hibernate\lib\servlet.jar;D:\Donnees\eclipse\eclipseworkspace\essai_hibernate\lib\slf4j-api-1.7.5.jar;D:\Donnees\eclipse\eclipseworkspace\essai_hibernate\lib\slf4j-log4j12-1.7.5.jar;D:\Donnees\eclipse\eclipseworkspace\essai_hibernate\lib\spring-2.5.6.jar;D:\Donnees\eclipse\eclipseworkspace\essai_hibernate\lib\spring-test.jar;D:\Donnees\eclipse\eclipseworkspace\essai_hibernate\lib\spring-webmvc-struts.jar;D:\Donnees\eclipse\eclipseworkspace\essai_hibernate\lib\standard-1.1.2.jar;D:\Donnees\eclipse\eclipseworkspace\essai_hibernate\lib\struts-1.2.9.jar;D:\Donnees\eclipse\eclipseworkspace\essai_hibernate\lib\struts-el-1.2.9.jar;D:\Donnees\eclipse\eclipseworkspace\essai_hibernate\lib\swarmcache-1.0RC2.jar;/C:/Program Files/Java/eclipse/configuration/org.eclipse.osgi/bundles/358/1/.cp/;/C:/Program Files/Java/eclipse/configuration/org.eclipse.osgi/bundles/357/1/.cp/, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.7, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=1, java.io.tmpdir=C:\Users\dan\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=C:\Program Files\Java\jdk1.7.0_45\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, hibernate.use_sql_comments=true, user.dir=D:\Donnees\eclipse\eclipseworkspace\essai_hibernate, line.separator=
#, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, cache.provider_class=org.hibernate.cache.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.7, hibernate.connection.pool_size=1, hibernate.show_sql=true}
#11:16:46,036 DEBUG SessionFactoryObjectFactory:61 - initializing class SessionFactoryObjectFactory
#11:16:46,036 DEBUG SessionFactoryObjectFactory:99 - registered: 55ea44de-0d3f-457a-a97c-b013a210c5e1 (unnamed)
#11:16:46,036  INFO SessionFactoryObjectFactory:105 - Not binding factory to JNDI, no JNDI name configured
#11:16:46,036 DEBUG SessionFactoryImpl:369 - instantiated session factory
#11:16:46,176 DEBUG SessionFactoryImpl:539 - Checking 0 named HQL queries
#11:16:46,176 DEBUG SessionFactoryImpl:559 - Checking 0 named SQL queries
#11:16:46,207 DEBUG SessionImpl:265 - opened session at timestamp: 13892626061
#
#11:16:46,223 TRACE SessionImpl:382 - automatically flushing session
#
#11:16:46,223 TRACE SessionImpl:570 - before transaction completion
#11:16:46,223 TRACE SessionImpl:600 - after transaction completion
#11:16:46,223 TRACE SessionImpl:318 - closing session
log4j.logger.org.hibernate.impl=error, stdout
#log4j.logger.org.hibernate.impl=trace, stdout


###
log4j.logger.org.hibernate.tuple=error, stdout
#log4j.logger.org.hibernate.tuple=trace, stdout


### AbstractEntityPersister (mettre TRACE pour voir le log) ###################
#11:22:33,981 TRACE AbstractPropertyMapping:141 - Skipping duplicate registration of path [dateNaissance], existing type = [org.hibernate.type.TimestampType@1bfde48c], incoming type = [org.hibernate.type.TimestampType@1bfde48c]
#11:22:33,981 TRACE AbstractPropertyMapping:141 - Skipping duplicate registration of path [nom], existing type = [org.hibernate.type.StringType@71d6020], incoming type = [org.hibernate.type.StringType@71d6020]
#11:22:33,981 TRACE AbstractPropertyMapping:141 - Skipping duplicate registration of path [prenom], existing type = [org.hibernate.type.StringType@71d6020], incoming type = [org.hibernate.type.StringType@71d6020]
#11:22:33,981 TRACE AbstractPropertyMapping:141 - Skipping duplicate registration of path [id], existing type = [org.hibernate.type.LongType@1991d886], incoming type = [org.hibernate.type.LongType@1991d886]
#11:22:33,981 DEBUG AbstractEntityPersister:2952 - Static SQL for entity: levy.daniel.application.valueobject.Eleve
#11:22:33,981 DEBUG AbstractEntityPersister:2957 -  Version select: /* get version levy.daniel.application.valueobject.Eleve */ select ID_ELEVE from PUBLIC.ELEVES where ID_ELEVE =?
#11:22:33,981 DEBUG AbstractEntityPersister:2960 -  Snapshot select: /* get current state levy.daniel.application.valueobject.Eleve */ select eleve_.ID_ELEVE, eleve_.DATE_NAISSANCE as DATE2_0_, eleve_.NOM as NOM0_, eleve_.PRENOM as PRENOM0_ from PUBLIC.ELEVES eleve_ where eleve_.ID_ELEVE=?
#11:22:33,981 DEBUG AbstractEntityPersister:2963 -  Insert 0: /* insert levy.daniel.application.valueobject.Eleve */ insert into PUBLIC.ELEVES (DATE_NAISSANCE, NOM, PRENOM, ID_ELEVE) values (?, ?, ?, ?)
#11:22:33,981 DEBUG AbstractEntityPersister:2964 -  Update 0: /* update levy.daniel.application.valueobject.Eleve */ update PUBLIC.ELEVES set DATE_NAISSANCE=?, NOM=?, PRENOM=? where ID_ELEVE=?
#11:22:33,981 DEBUG AbstractEntityPersister:2965 -  Delete 0: /* delete levy.daniel.application.valueobject.Eleve */ delete from PUBLIC.ELEVES where ID_ELEVE=?
#
#11:22:34,230 TRACE AbstractEntityPersister:2391 - Inserting entity: [levy.daniel.application.valueobject.Eleve#10]
#
#11:22:34,230 TRACE AbstractEntityPersister:2179 - Dehydrating entity: [levy.daniel.application.valueobject.Eleve#10]
log4j.logger.org.hibernate.persister=error, stdout
#log4j.logger.org.hibernate.persister=trace, stdout


### LOADER (mettre DEBUG pour voir le log) ####################################
#11:37:11,857 DEBUG EntityLoader:123 - Static select for entity levy.daniel.application.valueobject.Eleve [NONE]: /* load levy.daniel.application.valueobject.Eleve */ select eleve0_.ID_ELEVE as ID1_0_0_, eleve0_.DATE_NAISSANCE as DATE2_0_0_, eleve0_.NOM as NOM0_0_, eleve0_.PRENOM as PRENOM0_0_ from PUBLIC.ELEVES eleve0_ where eleve0_.ID_ELEVE=?
#11:37:11,857 DEBUG EntityLoader:123 - Static select for entity levy.daniel.application.valueobject.Eleve [READ]: /* load levy.daniel.application.valueobject.Eleve */ select eleve0_.ID_ELEVE as ID1_0_0_, eleve0_.DATE_NAISSANCE as DATE2_0_0_, eleve0_.NOM as NOM0_0_, eleve0_.PRENOM as PRENOM0_0_ from PUBLIC.ELEVES eleve0_ where eleve0_.ID_ELEVE=?
#11:37:11,857 DEBUG EntityLoader:123 - Static select for entity levy.daniel.application.valueobject.Eleve [UPGRADE]: /* load levy.daniel.application.valueobject.Eleve */ select eleve0_.ID_ELEVE as ID1_0_0_, eleve0_.DATE_NAISSANCE as DATE2_0_0_, eleve0_.NOM as NOM0_0_, eleve0_.PRENOM as PRENOM0_0_ from PUBLIC.ELEVES eleve0_ where eleve0_.ID_ELEVE=? for update
#11:37:11,857 DEBUG EntityLoader:123 - Static select for entity levy.daniel.application.valueobject.Eleve [UPGRADE_NOWAIT]: /* load levy.daniel.application.valueobject.Eleve */ select eleve0_.ID_ELEVE as ID1_0_0_, eleve0_.DATE_NAISSANCE as DATE2_0_0_, eleve0_.NOM as NOM0_0_, eleve0_.PRENOM as PRENOM0_0_ from PUBLIC.ELEVES eleve0_ where eleve0_.ID_ELEVE=? for update
#11:37:11,857 DEBUG EntityLoader:123 - Static select for entity levy.daniel.application.valueobject.Eleve [FORCE]: /* load levy.daniel.application.valueobject.Eleve */ select eleve0_.ID_ELEVE as ID1_0_0_, eleve0_.DATE_NAISSANCE as DATE2_0_0_, eleve0_.NOM as NOM0_0_, eleve0_.PRENOM as PRENOM0_0_ from PUBLIC.ELEVES eleve0_ where eleve0_.ID_ELEVE=? for update
#11:37:11,857 DEBUG EntityLoader:123 - Static select for entity levy.daniel.application.valueobject.Eleve [PESSIMISTIC_READ]: /* load levy.daniel.application.valueobject.Eleve */ select eleve0_.ID_ELEVE as ID1_0_0_, eleve0_.DATE_NAISSANCE as DATE2_0_0_, eleve0_.NOM as NOM0_0_, eleve0_.PRENOM as PRENOM0_0_ from PUBLIC.ELEVES eleve0_ where eleve0_.ID_ELEVE=? for share
#11:37:11,857 DEBUG EntityLoader:123 - Static select for entity levy.daniel.application.valueobject.Eleve [PESSIMISTIC_WRITE]: /* load levy.daniel.application.valueobject.Eleve */ select eleve0_.ID_ELEVE as ID1_0_0_, eleve0_.DATE_NAISSANCE as DATE2_0_0_, eleve0_.NOM as NOM0_0_, eleve0_.PRENOM as PRENOM0_0_ from PUBLIC.ELEVES eleve0_ where eleve0_.ID_ELEVE=? for update
#11:37:11,857 DEBUG EntityLoader:123 - Static select for entity levy.daniel.application.valueobject.Eleve [PESSIMISTIC_FORCE_INCREMENT]: /* load levy.daniel.application.valueobject.Eleve */ select eleve0_.ID_ELEVE as ID1_0_0_, eleve0_.DATE_NAISSANCE as DATE2_0_0_, eleve0_.NOM as NOM0_0_, eleve0_.PRENOM as PRENOM0_0_ from PUBLIC.ELEVES eleve0_ where eleve0_.ID_ELEVE=? for update
#11:37:11,857 DEBUG EntityLoader:123 - Static select for entity levy.daniel.application.valueobject.Eleve [OPTIMISTIC]: /* load levy.daniel.application.valueobject.Eleve */ select eleve0_.ID_ELEVE as ID1_0_0_, eleve0_.DATE_NAISSANCE as DATE2_0_0_, eleve0_.NOM as NOM0_0_, eleve0_.PRENOM as PRENOM0_0_ from PUBLIC.ELEVES eleve0_ where eleve0_.ID_ELEVE=?
#11:37:11,857 DEBUG EntityLoader:123 - Static select for entity levy.daniel.application.valueobject.Eleve [OPTIMISTIC_FORCE_INCREMENT]: /* load levy.daniel.application.valueobject.Eleve */ select eleve0_.ID_ELEVE as ID1_0_0_, eleve0_.DATE_NAISSANCE as DATE2_0_0_, eleve0_.NOM as NOM0_0_, eleve0_.PRENOM as PRENOM0_0_ from PUBLIC.ELEVES eleve0_ where eleve0_.ID_ELEVE=?
#11:37:11,857 DEBUG EntityLoader:56 - Static select for action ACTION_MERGE on entity levy.daniel.application.valueobject.Eleve: /* load levy.daniel.application.valueobject.Eleve */ select eleve0_.ID_ELEVE as ID1_0_0_, eleve0_.DATE_NAISSANCE as DATE2_0_0_, eleve0_.NOM as NOM0_0_, eleve0_.PRENOM as PRENOM0_0_ from PUBLIC.ELEVES eleve0_ where eleve0_.ID_ELEVE=?
#11:37:11,857 DEBUG EntityLoader:56 - Static select for action ACTION_REFRESH on entity levy.daniel.application.valueobject.Eleve: /* load levy.daniel.application.valueobject.Eleve */ select eleve0_.ID_ELEVE as ID1_0_0_, eleve0_.DATE_NAISSANCE as DATE2_0_0_, eleve0_.NOM as NOM0_0_, eleve0_.PRENOM as PRENOM0_0_ from PUBLIC.ELEVES eleve0_ where eleve0_.ID_ELEVE=?
log4j.logger.org.hibernate.loader=error, stdout
#log4j.logger.org.hibernate.loader=debug, stdout


### GENERATEUR DE L'ID (mettre DEBUG pour voir le log)
# 09:38:03,859 DEBUG SequenceGenerator:105 - Sequence identifier generated: 1
log4j.logger.org.hibernate.id=error, stdout
#log4j.logger.org.hibernate.id=trace, stdout


### EVENEMENTS (mettre TRACE pour voir le log)
# 09:39:08,515 TRACE DefaultSaveOrUpdateEventListener:181 - saving transient instance
# 09:39:08,531 DEBUG AbstractSaveEventListener:135 - generated identifier: 1, using strategy: org.hibernate.id.SequenceGenerator
# 09:39:08,531 TRACE AbstractSaveEventListener:176 - saving [com.objis.demohibernate.simple.Formation#1]
# 09:39:08,546 TRACE AbstractFlushingEventListener:81 - flushing session
# 09:39:08,546 DEBUG AbstractFlushingEventListener:134 - processing flush-time cascades
# 09:39:08,546 DEBUG AbstractFlushingEventListener:177 - dirty checking collections
# 09:39:08,546 TRACE AbstractFlushingEventListener:194 - Flushing entities and processing referenced collections
# 09:39:08,546 TRACE AbstractFlushingEventListener:233 - Processing unreferenced collections
# 09:39:08,546 TRACE AbstractFlushingEventListener:247 - Scheduling collection removes/(re)creates/updates
# 09:39:08,546 DEBUG AbstractFlushingEventListener:108 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
# 09:39:08,546 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
# 09:39:08,546 TRACE AbstractFlushingEventListener:313 - executing flush
# 09:39:08,562 TRACE AbstractFlushingEventListener:344 - post flush
log4j.logger.org.hibernate.event=error, stdout
#log4j.logger.org.hibernate.event=trace, stdout


###
log4j.logger.org.hibernate.pretty=error, stdout
#log4j.logger.org.hibernate.pretty=trace, stdout


### LAZY LOADING (mettre DEBUG pour voir le log)
# 10:14:11,015 DEBUG TwoPhaseLoad:130 - resolving associations for [com.objis.demohibernate.simple.Formation#1]
# 10:14:11,015 DEBUG TwoPhaseLoad:226 - done materializing entity [com.objis.demohibernate.simple.Formation#1]
# 10:14:11,015 DEBUG StatefulPersistenceContext:860 - initializing non-lazy collections
log4j.logger.org.hibernate.engine=error, stdout
#log4j.logger.org.hibernate.engine=trace, stdout


### LAZY LOADING EXCEPTION (mettre ERROR pour voir le log)
# 10:19:42,156 ERROR LazyInitializationException:42 - could not initialize proxy - no Session
# org.hibernate.LazyInitializationException: could not initialize proxy - no Session
log4j.logger.org.hibernate.LazyInitializationException=error, stdout
#log4j.logger.org.hibernate.LazyInitializationException=trace, stdout


### Juste les STATISTIQUES Hibernate (mettre INFO pour voir le log) ###########
#11:53:23,146  INFO ConcurrentStatisticsImpl:540 - Logging statistics....
#11:53:23,161  INFO ConcurrentStatisticsImpl:541 - start time: 1389264802818
#11:53:23,161  INFO ConcurrentStatisticsImpl:542 - sessions opened: 1
#11:53:23,161  INFO ConcurrentStatisticsImpl:543 - sessions closed: 1
#11:53:23,161  INFO ConcurrentStatisticsImpl:544 - transactions: 1
#11:53:23,161  INFO ConcurrentStatisticsImpl:545 - successful transactions: 1
#11:53:23,161  INFO ConcurrentStatisticsImpl:546 - optimistic lock failures: 0
#11:53:23,161  INFO ConcurrentStatisticsImpl:547 - flushes: 1
#11:53:23,161  INFO ConcurrentStatisticsImpl:548 - connections obtained: 1
#11:53:23,161  INFO ConcurrentStatisticsImpl:549 - statements prepared: 2
#11:53:23,161  INFO ConcurrentStatisticsImpl:550 - statements closed: 2
#11:53:23,161  INFO ConcurrentStatisticsImpl:551 - second level cache puts: 0
#11:53:23,161  INFO ConcurrentStatisticsImpl:552 - second level cache hits: 0
#11:53:23,161  INFO ConcurrentStatisticsImpl:553 - second level cache misses: 0
#11:53:23,161  INFO ConcurrentStatisticsImpl:554 - entities loaded: 0
#11:53:23,161  INFO ConcurrentStatisticsImpl:555 - entities updated: 0
#11:53:23,161  INFO ConcurrentStatisticsImpl:556 - entities inserted: 1
#11:53:23,161  INFO ConcurrentStatisticsImpl:557 - entities deleted: 0
#11:53:23,161  INFO ConcurrentStatisticsImpl:558 - entities fetched (minimize this): 0
#11:53:23,161  INFO ConcurrentStatisticsImpl:559 - collections loaded: 0
#11:53:23,161  INFO ConcurrentStatisticsImpl:560 - collections updated: 0
#11:53:23,161  INFO ConcurrentStatisticsImpl:561 - collections removed: 0
#11:53:23,161  INFO ConcurrentStatisticsImpl:562 - collections recreated: 0
#11:53:23,161  INFO ConcurrentStatisticsImpl:563 - collections fetched (minimize this): 0
#11:53:23,161  INFO ConcurrentStatisticsImpl:564 - queries executed to database: 0
#11:53:23,161  INFO ConcurrentStatisticsImpl:565 - query cache puts: 0
#11:53:23,161  INFO ConcurrentStatisticsImpl:566 - query cache hits: 0
#11:53:23,161  INFO ConcurrentStatisticsImpl:567 - query cache misses: 0
#11:53:23,161  INFO ConcurrentStatisticsImpl:568 - max query time: 0ms
log4j.logger.org.hibernate.stat=error, stdout
#log4j.logger.org.hibernate.stat=info, stdout


### CONNECTION (mettre TRACE pour voir le log)
### enable the following line if you want to track down connection ###
### leakages when using DriverManagerConnectionProvider ###
#log4j.logger.org.hibernate.connection.DriverManagerConnectionProvider=trace
# 09:42:07,000  INFO DriverManagerConnectionProvider:64 - Using Hibernate built-in connection pool (not for production use!)
# 09:42:07,000  INFO DriverManagerConnectionProvider:65 - Hibernate connection pool size: 1
# 09:42:07,000  INFO DriverManagerConnectionProvider:68 - autocommit mode: false
# 09:42:07,015  INFO DriverManagerConnectionProvider:103 - using driver: org.postgresql.Driver at URL: jdbc:postgresql://localhost/objis
# 09:42:07,015  INFO DriverManagerConnectionProvider:106 - connection properties: {user=postgres, password=postgres}
# 09:42:07,015 TRACE DriverManagerConnectionProvider:116 - total checked-out connections: 0
# 09:42:07,015 DEBUG DriverManagerConnectionProvider:132 - opening new JDBC connection
# 09:42:07,125 DEBUG DriverManagerConnectionProvider:138 - created connection to: jdbc:postgresql://localhost/objis, Isolation Level: 2
# 09:42:07,156 TRACE DriverManagerConnectionProvider:152 - returning connection to pool, pool size: 1
# 09:42:07,312 TRACE DriverManagerConnectionProvider:116 - total checked-out connections: 0
# 09:42:07,312 TRACE DriverManagerConnectionProvider:122 - using pooled JDBC connection, pool size: 0
# 09:42:07,453 TRACE DriverManagerConnectionProvider:152 - returning connection to pool, pool size: 1
# 09:42:07,484 TRACE DriverManagerConnectionProvider:116 - total checked-out connections: 0
# 09:42:07,484 TRACE DriverManagerConnectionProvider:122 - using pooled JDBC connection, pool size: 0
# 09:42:07,515 TRACE DriverManagerConnectionProvider:152 - returning connection to pool, pool size: 1
log4j.logger.org.hibernate.connection=error, stdout
#log4j.logger.org.hibernate.connection=trace, stdout

##### ANNOTATIONS HIBERNATE ########
log4j.logger.org.hibernate.annotations.common=error, stdout
#log4j.logger.org.hibernate.annotations.common=trace, stdout


#------------------------------------------------
#STRUTS2.2.1.1
# définition du niveau et des Appender de chaque package.
#**********************************************************
#hiérarchie des niveaux : FATAL>ERROR>WARN>INFO>DEBUG>TRACE 
#**********************************************************
#log4j.logger.freemarker=OFF
#log4j.logger.com.opensymphony.xwork2=OFF
#log4j.logger.org.apache=INFO
#log4j.rootLogger=DEBUG
#log4j.logger.freemarker=DEBUG
#log4j.logger.com.opensymphony.xwork2=DEBUG
#log4j.logger.org.apache=DEBUG



#**********************************************************
#hiérarchie des niveaux : FATAL>ERROR>WARN>INFO>DEBUG>TRACE 
#**********************************************************


# ****************************************************************
# APPENDEUR (cible du Log)  *************************************
# ****************************************************************

#    * org.apache.log4j.ConsoleAppender : Effectue la journalisation vers la console ;
#    * org.apache.log4j.FileAppender : Journalise dans un fichier ;
#    * org.apache.log4j.RollingFileAppender : Journalise dans un fichier, celui-ci est renommé lorsqu'il atteint une certaine taille et la journalisation reprend dans un nouveau fichier (par exemple, on aura le fichier logfile dans lequel s'effectue la journalisation et logfile.1 qui contient les événements antérieurs).
#    * org.apache.log4j.DailyRollingFileAppender : Journalise dans un fichier qui tourne régulièrement (contrairement à ce que son nom suggère, ce n'est pas forcément tous les jours) ;
#    *  org.apache.log4j.jdbc.JDBCAppender : Effectue la journalisation vers une base de données ;
#    * org.apache.log4j.net.JMSAppender : Utilise JMS pour journaliser les événements ;
#    * org.apache.log4j.nt.NTEventLogAppender : Journalise via le journal des événements de Windows (NT/2000/XP) ;
#    * org.apache.log4j.lf5.LF5Appender : Journalise les événements vers une console basée sur Swing, celle-ci permet de trier ou de filtrer les événements ;
#    * org.apache.log4j.varia.NullAppender : N'effectue aucune journalisation ;
#    * org.apache.log4j.net.SMTPAppender : Envoie un email lorsque certains événements surviennent (à ne pas activer avec un niveau de journalisation DEBUG...) ;
#    * org.apache.log4j.net.SocketAppender : Envoie les événements de journalisation vers un serveur de journalisation ;
#    * org.apache.log4j.net.SyslogAppender : Journalise les événements vers un daemon Syslog (distant ou non) ;
#    * org.apache.log4j.net.TelnetAppender : Journalise les événements vers un socket auquel on peut se connecter via telnet ;


#------------------------------------------------
### FICHIER TOURNANT
#------------------------------------------------
# Configure rolling pour afficher dans un fichier tournant
log4j.appender.rolling=org.apache.log4j.RollingFileAppender

# Fixe le nom du fichier tournant de log (nom complet)
log4j.appender.rolling.File=/data/problemes.log

# Fixe la taille max du fichier de log
log4j.appender.rolling.MaxFileSize=1000KB

# Garde 3 copies de sauvegarde du fichier tournant
log4j.appender.rolling.MaxBackupIndex=3

# Configure le layout et conversion pattern de rolling
log4j.appender.rolling.layout=org.apache.log4j.PatternLayout

#Format ACAI V1.5 en production
#log4j.appender.rolling.layout.ConversionPattern=[%d] %X{session} %X{utilisateur} %5p (%c) - %m (%x) %n

#Format ACAI V1.5 en phase de développement
log4j.appender.rolling.layout.ConversionPattern=[%x] %d{ABSOLUTE} - %p %c - %m%n



#------------------------------------------------
### CONSOLE
#------------------------------------------------
# Configure stdout pour afficher sur la console
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.Target=System.out

# Format Objis
#log4j.appender.stdout.layout.ConversionPattern=%d{ABSOLUTE} %5p %c{1}: - %m%n

# Format Mykong
log4j.appender.stdout.layout.ConversionPattern=DATE : %d{dd MMMM yyyy - HH:mm:ss,SSS} -- NIVEAU DE LOG :%5p -- CLASSE : %c{1}: -- LIGNE : %L %n-- MESSAGE : %m%n

#Format ACAI V1.5 en production
#log4j.appender.stdout.layout.ConversionPattern=[%d] %X{session} %X{utilisateur} %5p (%c) - %m (%x) %n

# Format simple en développement
#log4j.appender.stdout.layout.ConversionPattern=%c %5p - %m (%x) %n

#------------------------------------------------
# Configure l'appender histo
log4j.appender.histo=org.apache.log4j.ConsoleAppender
log4j.appender.histo.layout=org.apache.log4j.PatternLayout
log4j.appender.histo.layout.ConversionPattern=%c %X{utilisateur} - %m%n

#------------------------------------------------
# Configure JDBC appender
log4j.appender.JDBC=org.apache.log4j.jdbcplus.JDBCAppender
log4j.appender.JDBC.url=jdbc:oracle:thin:@172.23.208.126:1521:CNDA
log4j.appender.JDBC.dbclass=oracle.jdbc.driver.OracleDriver
log4j.appender.JDBC.username=log4j
log4j.appender.JDBC.password=log4j
log4j.appender.JDBC.sql=INSERT INTO LOGTEST (id, prio, cat, thread, ndc, msg, layout_msg, throwable, created_on, created_by) VALUES (s_logtest.nextval, @PRIO@, @CAT@, @THREAD@, @NDC@, @MSG@, @LAYOUT_MSG@, @THROWABLE@, @TIMESTAMP@, 'news')
log4j.appender.JDBC.layout=org.apache.log4j.PatternLayout
log4j.appender.JDBC.layout.ConversionPattern=%x
log4j.appender.JDBC.buffer=1
log4j.appender.JDBC.commit=Y
#------------------------------------------------


